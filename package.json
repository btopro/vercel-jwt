{
  "name": "@dfh-foundation/vercel-jwt",
  "version": "1.1.2",
  "description": "Authentication and authorization functions for validating JWTs in serverless functions deployed on Vercel (formerly Zeit Now)",
  "main": "build/main/index.js",
  "typings": "build/main/index.d.ts",
  "module": "build/module/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dfh-foundation/vercel-jwt.git"
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "license": "MIT",
  "keywords": [],
  "scripts": {
    "describe": "npm-scripts-info",
    "prebuild": "run-s lint",
    "build": "run-s clean && tsc -b",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "lint": "eslint src/**/*.ts --cache --fix",
    "test": "run-s build test:*",
    "test:unit": "nyc --silent ava",
    "watch": "run-s clean build && run-p \"build -- -w\" \"test:unit -- --watch\"",
    "cov": "run-s build test:unit cov:html && open-cli coverage/index.html",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "cov:report": "nyc report",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "clean": "rimraf build",
    "prepare": "run-s clean test cov:report",
    "release": "standard-version",
    "publish-release": "git push --follow-tags origin master && npm publish",
    "github-release": "conventional-github-releaser -p angular -r 0"
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "version": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit"
  },
  "engines": {
    "node": ">=14.17"
  },
  "dependencies": {
    "@types/jsonwebtoken": "^8.5.1",
    "jsonwebtoken": "^8.5.1",
    "jwks-rsa": "^2.0.2",
    "sha.js": "^2.4.11"
  },
  "peerDependencies": {
    "@vercel/node": ">=1.10.0"
  },
  "devDependencies": {
    "@ava/typescript": "^1.1.1",
    "@bitjson/npm-scripts-info": "^1.0.0",
    "@bitjson/typedoc": "^0.15.0-0",
    "@commitlint/cli": "^12.1.1",
    "@commitlint/config-conventional": "^12.1.1",
    "@istanbuljs/nyc-config-typescript": "^0.1.3",
    "@typescript-eslint/eslint-plugin": "^3.6.0",
    "@typescript-eslint/parser": "^3.6.0",
    "@vercel/node": "^1.10.0",
    "ava": "^3.10.1",
    "codecov": "^3.5.0",
    "conventional-github-releaser": "^3.1.5",
    "eslint": "^7.4.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jsdoc": "^29.1.3",
    "eslint-plugin-prefer-arrow": "^1.2.1",
    "eslint-plugin-prettier": "^3.1.4",
    "gh-pages": "^3.1.0",
    "husky": "^4.2.5",
    "lint-staged": "^10.2.11",
    "npm-run-all": "^4.1.5",
    "nyc": "^14.1.1",
    "open-cli": "^6.0.1",
    "prettier": "^2.5.1",
    "rimraf": "^3.0.2",
    "standard-version": "^9.2.0",
    "ts-sinon": "^1.2.0",
    "typescript": "^3.9.6"
  },
  "ava": {
    "failFast": true,
    "typescript": {
      "rewritePaths": {
        "src/": "build/main/"
      }
    },
    "files": [
      "!build/module/**"
    ]
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "src/**/*.ts": [
      "eslint --cache --fix",
      "prettier --write"
    ]
  }
}
